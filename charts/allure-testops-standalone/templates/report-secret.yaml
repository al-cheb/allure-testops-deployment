---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: report-secret
stringData:
  report.properties: |
    server.port={{ .Values.testops.service.reportPort }}

    spring.profiles.active=kubernetes
    spring.cloud.consul.enabled=false

    allure.endpoint={{ ternary "https" "http" .Values.network.tls.enabled }}://{{ .Values.host }}
    allure.jwt.secret={{ .Values.jwtSecret }}
    allure.crypto.password={{ .Values.cryptoPass }}

    spring.datasource.url=jdbc:postgresql://{{ template "reportDBHost" . }}:{{ template "reportDBPort" . }}/{{ template "reportDBName" . }}?sslmode={{ template "postgresSSL" . }}

{{- if .Values.postgresql.enabled }}
    spring.datasource.username={{ .Values.postgresql.auth.username }}
    spring.datasource.password={{ .Values.postgresql.auth.password }}
{{- else }}
    spring.datasource.username={{ .Values.postgresql.external.reportUsername }}
    spring.datasource.password={{ .Values.postgresql.external.reportPassword }}
{{- end }}

    spring.rabbitmq.addresses={{ template "rabbitHost" . }}
    spring.rabbitmq.username={{ .Values.rabbitmq.auth.username }}
    spring.rabbitmq.password={{ .Values.rabbitmq.auth.password }}
    spring.rabbitmq.virtual-host={{ .Values.rabbitmq.external.vhost }}

{{- if eq .Values.fs.type "S3" }}
    allure.blob-storage.type=s3_async
  {{- if .Values.minio.enabled }}
    allure.blob-storage.s3.endpoint=http://{{ template "allure-testops.minio.fullname" . }}:{{ .Values.minio.service.ports.api }}
    allure.blob-storage.s3.pathStyleAccess=true
  {{- else}}
    allure.blob-storage.s3.endpoint={{ .Values.fs.s3.endpoint }}
    allure.blob-storage.s3.pathStyleAccess={{ .Values.fs.s3.pathstyle }}
  {{- end }}
  {{- if .Values.minio.enabled }}
    allure.blob-storage.s3.accessKey={{ .Values.minio.auth.rootUser }}
    allure.blob-storage.s3.secretKey={{ .Values.minio.auth.rootPassword }}
    allure.blob-storage.s3.bucket={{ .Values.minio.defaultBuckets }}
    allure.blob-storage.s3.region={{ .Values.minio.defaultRegion }}
  {{- else }}
    allure.blob-storage.s3.accessKey={{ .Values.fs.s3.accessKey }}
    allure.blob-storage.s3.secretKey={{ .Values.fs.s3.secretKey }}
    allure.blob-storage.s3.bucket={{ .Values.fs.s3.bucket }}
    allure.blob-storage.s3.region={{ .Values.fs.s3.region }}
  {{- end }}
{{- else }}
    allure.blob-storage.type=file_system
    allure.blob-storage.filesystem.directory={{ .Values.fs.csiStorage.mountPoint }}
{{- end }}

    spring.cloud.discovery.client.simple.instances.allure-ee-gateway[0].instanceId=allure-ee-gateway-1
    spring.cloud.discovery.client.simple.instances.allure-ee-gateway[0].host={{ template "allure-testops-standalone.fullname" . }}
    spring.cloud.discovery.client.simple.instances.allure-ee-gateway[0].port={{ .Values.testops.service.gatewayPort }}

    spring.cloud.discovery.client.simple.instances.allure-ee-uaa[0].instanceId=allure-ee-uaa-1
    spring.cloud.discovery.client.simple.instances.allure-ee-uaa[0].host={{ template "allure-testops-standalone.fullname" . }}
    spring.cloud.discovery.client.simple.instances.allure-ee-uaa[0].port={{ .Values.testops.service.uaaPort }}

    spring.cloud.discovery.client.simple.instances.allure-ee-report[0].instanceId=allure-ee-report-1
    spring.cloud.discovery.client.simple.instances.allure-ee-report[0].host={{ template "allure-testops-standalone.fullname" . }}
    spring.cloud.discovery.client.simple.instances.allure-ee-report[0].port={{ .Values.testops.service.reportPort }}

    management.metrics.export.prometheus.enabled=true
    management.endpoints.web.exposure.include=health,info,prometheus,configprops
    management.endpoint.health.cache.time-to-live=15s

    spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://{{ template "allure-testops-standalone.fullname" . }}:{{ .Values.testops.service.reportPort }}/.well-known/jwks.json
